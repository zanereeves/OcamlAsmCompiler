DUNE(1)                           Dune Manual                          DUNE(1)



NNAAMMEE
       dune - composable build system for OCaml

SSYYNNOOPPSSIISS
       dduunnee bbuuiilldd [[----wwaattcchh]]
       dduunnee rruunntteesstt [[----wwaattcchh]]
       dduunnee eexxeecc NNAAMMEE
       dduunnee uuttoopp [[DDIIRR]]
       dduunnee iinnssttaallll
       dduunnee iinniitt pprroojjeecctt NNAAMMEE [[PPAATTHH]] [[----lliibbss==ll11,,ll22 ----ppppxx==pp11,,pp22 ----iinnlliinnee--tteessttss]]

DDEESSCCRRIIPPTTIIOONN
       Dune is a build system designed for OCaml projects only. It focuses on
       providing the user with a consistent experience and takes care of most
       of the low-level details of OCaml compilation. All you have to do is
       provide a description of your project and Dune will do the rest.

       The scheme it implements is inspired from the one used inside Jane
       Street and adapted to the open source world. It has matured over a long
       time and is used daily by hundreds of developers, which means that it
       is highly tested and productive.

CCOOMMMMAANNDDSS
       bbuuiilldd
           Build the given targets, or all installable targets if none are
           given.

       ccaacchhee
           Manage the shared artifacts cache

       cclleeaann
           Clean the project.

       ccoommppuuttee
           Compute internal function.

       ddeessccrriibbee
           Describe the workspace.

       eexxeecc
           Execute a command in a similar environment as if installation was
           performed.

       eexxtteerrnnaall--lliibb--ddeeppss
           Print out external libraries needed to build the given targets.

       ffoorrmmaatt--dduunnee--ffiillee
           Format dune files

       hheellpp
           Additional Dune help

       iinniitt
           Initialize dune components

       iinnssttaallll
           Install packages.

       iinnssttaalllleedd--lliibbrraarriieess
           Print out libraries installed on the system.

       ooccaammll--mmeerrlliinn
           Start a merlin configuration server

       pprriinntteennvv
           Print the environment of a directory

       pprroommoottee
           Promote files from the last run

       rruulleess
           Dump internal rules.

       rruunntteesstt
           Run tests.

       ssuubbsstt
           Substitute watermarks in source files.

       ttoopp Print a list of toplevel directives for including directories and
           loading cma files.

       uunniinnssttaallll
           Uninstall packages.

       uuppggrraaddee
           Upgrade jbuilder projects to dune

       uuttoopp
           Load library in utop

CCOOMMMMAANNDD AALLIIAASSEESS
       tteesstt
           An alias for rruunntteesstt.

OOPPTTIIOONNSS
       ----bbuuiilldd--iinnffoo
           Show build information.

       --ff, ----ffoorrccee
           Force actions associated to aliases to be re-executed even if their
           dependencies haven't changed.

       ----hheellpp[=_F_M_T] (default=auto)
           Show this help in format _F_M_T. The value _F_M_T must be one of `auto',
           `pager', `groff' or `plain'. With `auto', the format is `pager` or
           `plain' whenever the TTEERRMM env var is `dumb' or undefined.

       ----ssaannddbbooxx=_V_A_L (absent DDUUNNEE__SSAANNDDBBOOXX env)
           Sandboxing mode to use by default. Some actions require a certain
           sandboxing mode, so they will ignore this setting. The allowed
           values are: none, symlink, copy.

       ----vveerrssiioonn
           Show version information.

       --ww, ----wwaattcchh
           Instead of terminating build after completion, wait continuously
           for file changes.

CCOOMMMMOONN OOPPTTIIOONNSS
       These options are common to all commands.

       ----aallwwaayyss--sshhooww--ccoommmmaanndd--lliinnee
           Always show the full command lines of programs executed by dune

       ----aauuttoo--pprroommoottee
           Automatically promote files. This is similar to running dduunnee
           pprroommoottee after the build.

       ----bbuuiilldd--ddiirr=_F_I_L_E (absent DDUUNNEE__BBUUIILLDD__DDIIRR env)
           Specified build directory. _build if unspecified

       ----ccaacchhee=_V_A_L (absent DDUUNNEE__CCAACCHHEE env)
           Activate binary cache (either `disabled' or `enabled'). Default is
           `disabled'.

       ----ccaacchhee--cchheecckk--pprroobbaabbiilliittyy=_V_A_L (absent=0. or
       DDUUNNEE__CCAACCHHEE__CCHHEECCKK__PPRROOBBAABBIILLIITTYY env)
           Probability cached rules are rerun to check for reproducibility

       ----ccaacchhee--dduupplliiccaattiioonn=_V_A_L (absent DDUUNNEE__CCAACCHHEE__DDUUPPLLIICCAATTIIOONN env)
           Binary cache duplication mode

       ----ccaacchhee--ttrraannssppoorrtt=_V_A_L (absent DDUUNNEE__CCAACCHHEE__TTRRAANNSSPPOORRTT env)
           Binary cache protocol

       ----ccoonnffiigg--ffiillee=_F_I_L_E
           Load this configuration file instead of the default one.

       ----ddeebbuugg--aarrttiiffaacctt--ssuubbssttiittuuttiioonn
           Print debugging info about artifact substitution

       ----ddeebbuugg--bbaacckkttrraacceess
           Always print exception backtraces.

       ----ddeebbuugg--ddeeppeennddeennccyy--ppaatthh
           In case of error, print the dependency path from the targets on the
           command line to the rule that failed.

       ----ddeebbuugg--ffiinnddlliibb
           Debug the findlib sub-system.

       ----ddeeffaauulltt--ttaarrggeett=_T_A_R_G_E_T (absent=@@default)
           Set the default target that when none is specified to dduunnee bbuuiilldd.

       ----ddiiffff--ccoommmmaanndd=_V_A_L
           Shell command to use to diff files. Use - to disable printing the
           diff.

       ----ddiissaabbllee--pprroommoottiioonn (absent DDUUNNEE__DDIISSAABBLLEE__PPRROOMMOOTTIIOONN env)
           Disable all promotion rules

       ----ddiissppllaayy=_M_O_D_E
           Control the display mode of Dune. See dduunnee--ccoonnffiigg((55)) for more
           details.

       ----iiggnnoorree--pprroommootteedd--rruulleess
           Ignore rules with (mode promote), except ones with (only ...). The
           variable %{ignoring_promoted_rules} in dune files reflects whether
           this option was passed or not.

       ----iinnssttrruummeenntt--wwiitthh=_B_A_C_K_E_N_D_S (absent DDUUNNEE__IINNSSTTRRUUMMEENNTT__WWIITTHH env)
           "Enable instrumentation by BBAACCKKEENNDDSS. BBAACCKKEENNDDSS is a comma-separated
           list of library names, each one of which must declare an
           instrumentation backend.

       --jj _J_O_B_S
           Run no more than _J_O_B_S commands simultaneously.

       ----nnoo--bbuuffffeerr
           Do not buffer the output of commands executed by dune. By default
           dune buffers the output of subcommands, in order to prevent
           interleaving when multiple commands are executed in parallel.
           However, this can be an issue when debugging long running tests.
           With ----nnoo--bbuuffffeerr, commands have direct access to the terminal. Note
           that as a result their output won't be captured in the log file.
           You should use this option in conjunction with --jj 11, to avoid
           interleaving. Additionally you should use ----vveerrbboossee as well, to
           make sure that commands are printed before they are being executed.

       ----nnoo--ccoonnffiigg
           Do not load the configuration file

       ----nnoo--pprriinntt--ddiirreeccttoorryy
           Suppress "Entering directory" messages

       ----oonnllyy--ppaacckkaaggeess=_P_A_C_K_A_G_E_S
           Ignore stanzas referring to a package that is not in PPAACCKKAAGGEESS.
           PPAACCKKAAGGEESS is a comma-separated list of package names. Note that this
           has the same effect as deleting the relevant stanzas from dune
           files. It is mostly meant for releases. During development, it is
           likely that what you want instead is to build a particular
           <<ppaacckkaaggee>>..iinnssttaallll target.

       --pp _P_A_C_K_A_G_E_S, ----ffoorr--rreelleeaassee--ooff--ppaacckkaaggeess=_P_A_C_K_A_G_E_S (required)
           Shorthand for ----rreelleeaassee ----oonnllyy--ppaacckkaaggeess PPAACCKKAAGGEE. You must use this
           option in your _<_p_a_c_k_a_g_e_>_._o_p_a_m files, in order to build only what's
           necessary when your project contains multiple packages as well as
           getting reproducible builds.

       ----pprrooffiillee=_V_A_L (absent DDUUNNEE__PPRROOFFIILLEE env)
           Select the build profile, for instance ddeevv or rreelleeaassee. The default
           is ddeevv.

       ----pprroommoottee--iinnssttaallll--ffiilleess[=_V_A_L] (default=true)
           Promote the generated <package>.install files to the source tree

       ----rreelleeaassee
           Put dduunnee into a reproducible _r_e_l_e_a_s_e mode. This is in fact a
           shorthand for ----rroooott .. ----iiggnnoorree--pprroommootteedd--rruulleess ----nnoo--ccoonnffiigg
           ----pprrooffiillee rreelleeaassee ----aallwwaayyss--sshhooww--ccoommmmaanndd--lliinnee
           ----pprroommoottee--iinnssttaallll--ffiilleess ----ddeeffaauulltt--ttaarrggeett @@iinnssttaallll. You should use
           this option for release builds. For instance, you must use this
           option in your _<_p_a_c_k_a_g_e_>_._o_p_a_m files. Except if you already use --pp,
           as --pp implies this option.

       ----rroooott=_D_I_R
           Use this directory as workspace root instead of guessing it. Note
           that this option doesn't change the interpretation of targets given
           on the command line. It is only intended for scripts.

       ----ssttoorree--oorriigg--ssoouurrccee--ddiirr (absent DDUUNNEE__SSTTOORREE__OORRIIGG__SSOOUURRCCEE__DDIIRR env)
           Store original source location in dune-package metadata

       ----tteerrmmiinnaall--ppeerrssiisstteennccee=_M_O_D_E
           Changes how the log of build results are displayed to the console
           between rebuilds while in ----wwaattcchh mode. Supported modes: pprreesseerrvvee,
           cclleeaarr--oonn--rreebbuuiilldd.

       ----ttrraaccee--ffiillee=_F_I_L_E
           Output trace data in catapult format (compatible with
           chrome://tracing)

       ----vveerrbboossee
           Same as ----ddiissppllaayy vveerrbboossee

       ----wwoorrkkssppaaccee=_F_I_L_E (absent DDUUNNEE__WWOORRKKSSPPAACCEE env)
           Use this specific workspace file instead of looking it up.

       --xx _V_A_L
           Cross-compile using this toolchain.

MMOORREE HHEELLPP
       Use `dduunnee _C_O_M_M_A_N_D --help' for help on a single command.

EENNVVIIRROONNMMEENNTT
       These environment variables affect the execution of dduunnee:

       DDUUNNEE__BBUUIILLDD__DDIIRR
           Specified build directory. _build if unspecified

       DDUUNNEE__CCAACCHHEE
           Activate binary cache (either `disabled' or `enabled'). Default is
           `disabled'.

       DDUUNNEE__CCAACCHHEE__CCHHEECCKK__PPRROOBBAABBIILLIITTYY
           Probability cached rules are rerun to check for reproducibility

       DDUUNNEE__CCAACCHHEE__DDUUPPLLIICCAATTIIOONN
           Binary cache duplication mode

       DDUUNNEE__CCAACCHHEE__TTRRAANNSSPPOORRTT
           Binary cache protocol

       DDUUNNEE__DDIISSAABBLLEE__PPRROOMMOOTTIIOONN
           Disable all promotion rules

       DDUUNNEE__IINNSSTTRRUUMMEENNTT__WWIITTHH
           "Enable instrumentation by BBAACCKKEENNDDSS. BBAACCKKEENNDDSS is a comma-separated
           list of library names, each one of which must declare an
           instrumentation backend.

       DDUUNNEE__PPRROOFFIILLEE
           Build profile. ddeevv if unspecified or rreelleeaassee if -p is set.

       DDUUNNEE__SSAANNDDBBOOXX
           Sandboxing mode to use by default. (see --sandbox)

       DDUUNNEE__SSTTOORREE__OORRIIGG__SSOOUURRCCEE__DDIIRR
           Store original source location in dune-package metadata

       DDUUNNEE__WWOORRKKSSPPAACCEE
           Use this specific workspace file instead of looking it up.

BBUUGGSS
       Check bug reports at https://github.com/ocaml/dune/issues

EEXXAAMMPPLLEESS
       1.  Initialise a new project named `foo':

             dune init project foo

       2.  Build all targets in the current source tree:

             dune build

       3.  Run the executable named `bar':

             dune exec bar

       4.  Run all tests in the current source tree:

             dune runtest

       5.  Install all components defined in the project:

             dune install

       6.  Remove all build artefacts:

             dune clean



Dune 2.9.1                                                             DUNE(1)
